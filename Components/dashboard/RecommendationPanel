import React from "react";
import { Card, CardContent, CardHeader, CardTitle } from "@/components/ui/card";
import { Badge } from "@/components/ui/badge";
import { ArrowUpCircle, ArrowDownCircle } from "lucide-react";

export default function RecommendationPanel({ portfolio, loading }) {
  // Mock recommendations for now
  const mockBuyRecommendations = [
    { symbol: "AAPL", confidence: 0.85 },
    { symbol: "MSFT", confidence: 0.82 },
    { symbol: "GOOGL", confidence: 0.78 }
  ];

  const mockSellRecommendations = [
    { symbol: "TSLA", confidence: 0.75 },
    { symbol: "META", confidence: 0.72 }
  ];

  if (loading) {
    return null;
  }

  return (
    <div className="space-y-6">
      <Card>
        <CardHeader>
          <CardTitle className="flex items-center gap-2">
            <ArrowUpCircle className="h-5 w-5 text-green-500" />
            Buy Recommendations
          </CardTitle>
        </CardHeader>
        <CardContent>
          <div className="space-y-4">
            {mockBuyRecommendations.map((rec) => (
              <div key={rec.symbol} className="flex items-center justify-between">
                <span className="font-medium">{rec.symbol}</span>
                <Badge variant="outline" className="bg-green-50 text-green-700">
                  {(rec.confidence * 100).toFixed(0)}% Match
                </Badge>
              </div>
            ))}
          </div>
        </CardContent>
      </Card>

      <Card>
        <CardHeader>
          <CardTitle className="flex items-center gap-2">
            <ArrowDownCircle className="h-5 w-5 text-red-500" />
            Sell Recommendations
          </CardTitle>
        </CardHeader>
        <CardContent>
          <div className="space-y-4">
            {mockSellRecommendations.map((rec) => (
              <div key={rec.symbol} className="flex items-center justify-between">
                <span className="font-medium">{rec.symbol}</span>
                <Badge variant="outline" className="bg-red-50 text-red-700">
                  {(rec.confidence * 100).toFixed(0)}% Match
                </Badge>
              </div>
            ))}
          </div>
        </CardContent>
      </Card>
    </div>
  );
}